{"version":3,"file":"main.bundle.js","mappings":"uhCAAMA,EAAAA,WACJ,WAAYC,GAAO,UACjBC,KAAKD,MAAQA,EACbC,KAAKC,OAASF,EAAMG,c,wCAGtB,WAA8B,IAAlBC,EAAkB,uDAAJ,GACxBA,EAAYC,SAAQ,SAACC,EAASC,GAC5BC,QAAQC,IAAIH,GACwB,YAAhCA,EAAQI,aAAa,QACvB,IAAIC,EAAcL,GACf,IAAIP,EAAWO,S,sCAXpBP,GAgBAY,EAAAA,SAAAA,I,soBAGJ,WAAYX,GAAO,2BACjB,cAAMA,IADW,aAFP,GAEO,kBAMT,SAACY,GACTA,EAAEC,iBACF,EAAKC,WAAa,EAAKA,UACvB,EAAKC,sBATY,2BAYA,WACjB,EAAKC,aAAaC,UAAUC,OAAO,UACnC,EAAKF,aAAaG,UAAY,EAAKL,UAC/B,iBACA,aACJ,EAAKd,MAAMoB,aAAa,OAAQ,EAAKN,UAAY,OAAS,eAf1D,EAAKE,aAAe,EAAKd,OAAOmB,cAAc,2BAC9C,EAAKL,aAAaM,iBAAiB,QAAS,EAAKC,SAHhC,E,SAHfZ,CAAsBZ,GAwB5B,U,4YCxCqByB,EAAAA,WACnB,WAAYtB,GAAQ,Y,4FAAA,0BASX,WACP,EAAKuB,QAAQR,UAAUC,OAAO,WAVZ,eAab,SAACN,GACD,EAAKV,OAAOwB,SAASd,EAAEe,SAC1B,EAAKF,QAAQR,UAAUW,OAAO,WAdhC3B,KAAKC,OAASA,EACd,I,IAAA,G,EAA6BA,EAAO2B,S,EAApC,E,8zBAAOb,EAAP,KAAqBc,EAArB,KACA7B,KAAKwB,QAAUK,EACf7B,KAAKe,aAAeA,EACpBf,KAAKe,aAAaM,iBAAiB,QAASrB,KAAKiB,QACjDa,SAAST,iBAAiB,QAASrB,KAAK+B,M,wCAa1C,WAA2B,IAAfC,EAAe,uDAAJ,GACrBC,MAAMC,KAAKF,GAAU5B,SAAQ,SAACC,GAC5B,IAAIkB,EAASlB,S,sCAtBEkB,GCIrBzB,EAAAA,KAAgBgC,SAASK,iBAAiB,kBAC1CZ,EAASa,KAAKN,SAASK,iBAAiB,e","sources":["webpack://frontend/./src/js/forms.js","webpack://frontend/./src/js/dropdown.js","webpack://frontend/./src/main.js"],"sourcesContent":["class InputField {\r\n  constructor(input) {\r\n    this.input = input;\r\n    this.parent = input.parentElement;\r\n  }\r\n\r\n  static init(domElements = []) {\r\n    domElements.forEach((element, i) => {\r\n      console.log(element);\r\n      if (element.getAttribute(\"type\") == \"password\")\r\n        new PasswordField(element);\r\n      else new InputField(element);\r\n    });\r\n  }\r\n}\r\n\r\nclass PasswordField extends InputField {\r\n  isVisible = false;\r\n\r\n  constructor(input) {\r\n    super(input);\r\n    this.toggleButton = this.parent.querySelector(\".field-password__toggle\");\r\n    this.toggleButton.addEventListener(\"click\", this.onClick);\r\n  }\r\n\r\n  onClick = (e) => {\r\n    e.preventDefault();\r\n    this.isVisible = !this.isVisible;\r\n    this.toggleVisibility();\r\n  };\r\n\r\n  toggleVisibility = () => {\r\n    this.toggleButton.classList.toggle(\"active\");\r\n    this.toggleButton.innerText = this.isVisible\r\n      ? \"visibility_off\"\r\n      : \"visibility\";\r\n    this.input.setAttribute(\"type\", this.isVisible ? \"text\" : \"password\");\r\n  };\r\n}\r\n\r\nexport default InputField;\r\n","export default class DropDown {\r\n  constructor(parent) {\r\n    this.parent = parent;\r\n    const [toggleButton, menu] = parent.children;\r\n    this.content = menu;\r\n    this.toggleButton = toggleButton;\r\n    this.toggleButton.addEventListener(\"click\", this.toggle);\r\n    document.addEventListener(\"click\", this.hide);\r\n  }\r\n\r\n  toggle = () => {\r\n    this.content.classList.toggle(\"show\");\r\n  };\r\n\r\n  hide = (e) => {\r\n    if (!this.parent.contains(e.target)) {\r\n      this.content.classList.remove(\"show\");\r\n    }\r\n  };\r\n\r\n  static init(elements = []) {\r\n    Array.from(elements).forEach((element) => {\r\n      new DropDown(element);\r\n    });\r\n  }\r\n}\r\n","import InputField from \"./js/forms\";\r\nimport DropDown from \"./js/dropdown\";\r\nimport \"./scss/index.scss\";\r\n\r\nInputField.init(document.querySelectorAll(\".field__input\"));\r\nDropDown.init(document.querySelectorAll(\".dropdown\"));\r\n"],"names":["InputField","input","this","parent","parentElement","domElements","forEach","element","i","console","log","getAttribute","PasswordField","e","preventDefault","isVisible","toggleVisibility","toggleButton","classList","toggle","innerText","setAttribute","querySelector","addEventListener","onClick","DropDown","content","contains","target","remove","children","menu","document","hide","elements","Array","from","querySelectorAll","init"],"sourceRoot":""}